<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:RouteNav.Avalonia.Controls">
    <Design.PreviewWith>
        <Border Width="400" Height="150">
            <controls:SidebarMenu>
                <controls:SidebarMenuItem Text="Item1" />
                <controls:SidebarMenuItem Text="Item2" />
            </controls:SidebarMenu>
        </Border>
    </Design.PreviewWith>

    <x:Double x:Key="SidebarMenuCompactWidth">32</x:Double>
    <x:Double x:Key="SidebarMenuExpandWidth">220</x:Double>
    <x:Double x:Key="SidebarMenuHeaderPaddingHeight">30</x:Double>
    <x:Double x:Key="SidebarMenuHamburgerButtonHeight">26</x:Double>
    <StreamGeometry x:Key="SidebarMenuHamburgerIcon">M3 17h18a1 1 0 0 1 .117 1.993L21 19H3a1 1 0 0 1-.117-1.993L3 17h18H3Zm0-6 18-.002a1 1 0 0 1 .117 1.993l-.117.007L3 13a1 1 0 0 1-.117-1.993L3 11l18-.002L3 11Zm0-6h18a1 1 0 0 1 .117 1.993L21 7H3a1 1 0 0 1-.117-1.993L3 5h18H3Z</StreamGeometry>
    <BoxShadows x:Key="SidebarMenuHamburgerShadow">1 1 1 1 #2000, 0 0 1 1 #2fff</BoxShadows>
    <BoxShadows x:Key="SidebarMenuContentShadow">0 0 1 1 #2000</BoxShadows>
    <Thickness x:Key="SidebarMenuHeaderMarginCollapsedPane">12,0,0,0</Thickness>
    <Thickness x:Key="SidebarMenuHeaderMarginExpandedPane">52,0,0,0</Thickness>
    <Thickness x:Key="SidebarMenuHeaderMarginExpandedOverlayPane">212,0,0,0</Thickness>

    <!-- Hamburger Button -->
    <ControlTheme x:Key="SidebarMenuHamburgerButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="Height" Value="{StaticResource SidebarMenuHamburgerButtonHeight}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="12,0,4,0" />
        <Setter Property="Margin" Value="4,0,8,0" />
        <Setter Property="CornerRadius" Value="8" />
        <Setter Property="ClipToBounds" Value="False" />
        <Setter Property="Template">
            <ControlTemplate>
                <Border Background="{DynamicResource SidebarMenuHamburgerBackground}" BoxShadow="">
                    <ContentPresenter x:Name="PART_ContentPresenter"
                                      Padding="{TemplateBinding Padding}"
                                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                      Background="{DynamicResource SidebarMenuHamburgerBackground}"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      BorderThickness="{TemplateBinding BorderThickness}"
                                      Content="{TemplateBinding Content}"
                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                      CornerRadius="{TemplateBinding CornerRadius}"
                                      TextElement.FontFamily="{TemplateBinding FontFamily}"
                                      TextElement.FontSize="{TemplateBinding FontSize}"
                                      TextElement.FontWeight="{TemplateBinding FontWeight}" />
                </Border>
            </ControlTemplate>
        </Setter>
        <Style Selector="^:pointerover /template/ ContentPresenter">
            <Setter Property="Border.BoxShadow" Value="{StaticResource SidebarMenuHamburgerShadow}" />
        </Style>
    </ControlTheme>

    <!--  SidebarMenu  -->
    <ControlTheme x:Key="{x:Type controls:SidebarMenu}" TargetType="controls:SidebarMenu">
        <Setter Property="Padding" Value="12 8 4 0" />
        <Setter Property="SidebarBackground" Value="{DynamicResource SidebarMenuSidebarBackground}" />
        <Setter Property="Background" Value="{DynamicResource SidebarMenuSidebarBackground}" />
        <Setter Property="ContentBackground" Value="{DynamicResource SidebarMenuContentBackground}" />
        <Setter Property="Template">
            <ControlTemplate>
                <Panel Background="{TemplateBinding SidebarBackground}">
                    <SplitView x:Name="PART_SidebarMenuPane"
                               CompactPaneLength="{StaticResource SidebarMenuCompactWidth}" DisplayMode="Inline"
                               IsPaneOpen="True" OpenPaneLength="{StaticResource SidebarMenuExpandWidth}"
                               PaneBackground="{TemplateBinding SidebarBackground}"
                               Background="{TemplateBinding ContentBackground}">
                        <SplitView.Pane>
                            <Grid Margin="0,0,1,5" RowDefinitions="Auto,Auto,*,Auto">
                                <Panel Grid.Row="0" Height="{StaticResource SidebarMenuHeaderPaddingHeight}" />
                                <ContentControl Grid.Row="1" Content="{TemplateBinding SidebarHeader}" IsVisible="{TemplateBinding SidebarHeader, Converter={x:Static ObjectConverters.IsNotNull}}" />
                                <ScrollViewer Grid.Row="2" x:Name="MenuItemListScrollViewer">
                                    <ListBox x:Name="PART_MenuItemList" ItemsSource="{TemplateBinding MenuItemsSource}" HorizontalAlignment="Stretch">
                                        <ListBox.Styles>
                                            <Style Selector="ListBoxItem">
                                                <Setter Property="Padding" Value="0" />
                                            </Style>
                                        </ListBox.Styles>
                                    </ListBox>
                                </ScrollViewer>
                                <ContentControl Grid.Row="3" Content="{TemplateBinding SidebarFooter}" IsVisible="{TemplateBinding SidebarFooter, Converter={x:Static ObjectConverters.IsNotNull}}" />
                            </Grid>
                        </SplitView.Pane>
                        <SplitView.Content>
                            <ScrollViewer x:Name="ContentScrollViewer"
                                          HorizontalScrollBarVisibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Page.(ScrollViewer.HorizontalScrollBarVisibility)}"
                                          VerticalScrollBarVisibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Page.(ScrollViewer.VerticalScrollBarVisibility)}">
                                <ContentPresenter x:Name="PART_NavigationContent" Background="Transparent" Padding="{TemplateBinding Padding}"
                                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Content="{TemplateBinding Page}" />
                            </ScrollViewer>
                        </SplitView.Content>
                    </SplitView>
                    <ToggleButton x:Name="SidebarMenuButton"
                                  Width="{StaticResource SidebarMenuCompactWidth}"
                                  Height="{StaticResource SidebarMenuHamburgerButtonHeight}"
                                  Margin="4,2,0,0" Padding="0" CornerRadius="4" HorizontalAlignment="Left" VerticalAlignment="Top" HorizontalContentAlignment="Center"
                                  Theme="{StaticResource SidebarMenuHamburgerButton}"
                                  IsChecked="{Binding #PART_SidebarMenuPane.IsPaneOpen, Mode=TwoWay}">
                        <PathIcon Data="{StaticResource SidebarMenuHamburgerIcon}" Foreground="{TemplateBinding Foreground}" />
                    </ToggleButton>
                </Panel>
            </ControlTemplate>
        </Setter>
    </ControlTheme>

</ResourceDictionary>